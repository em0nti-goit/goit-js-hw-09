{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,SAASO,EAAcC,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MACjCS,QAAQC,IAAI,iBACZd,EAAAe,OAAOC,QAAQ,qBAAoCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAG3D,SAASc,EAAeN,G,IAAET,EAAFS,EAAET,SAAUC,EAAZQ,EAAYR,MAClCS,QAAQC,IAAI,kBACZd,EAAAe,OAAOI,QAAQ,oBAAmCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAG1D,IAAMgB,EAAUC,SAASC,cAAc,SACrBD,SAASC,cAAc,yBAG/BC,iBAAiB,SAE3B,SAA6BC,GAC3BA,EAAEC,iBAEF,IAAMC,EAAaC,OAAOP,EAAQhB,MAAMwB,OAClCC,EAAYF,OAAOP,EAAQU,KAAKF,OAChCG,EAAcJ,OAAOP,EAAQY,OAAOJ,OACtCK,EAAeP,EAEnBb,QAAQC,IAAIY,EAAYG,EAAWE,GAEnC,IAAK,IAAIG,EAAI,EAAGA,GAAKH,EAAaG,IAChCrB,QAAQC,IAAIoB,EAAGD,GACf/B,EAAcgC,EAAGD,GAAcE,KAAKxB,GAAeyB,MAAMlB,GACzDe,GAAgBJ,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n}\n\nfunction notifySuccess({ position, delay }) {\n  console.log(\"notifySuccess\");\n  Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction notifyRejected({ position, delay }) {\n  console.log(\"notifyRejected\");\n  Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n}\n\nconst formRef = document.querySelector('.form');\nconst submitRef = document.querySelector('button[type=\"submit\"]');\n\n\nsubmitRef.addEventListener('click', onClickSubmitButton);\n\nfunction onClickSubmitButton(e) {\n  e.preventDefault();\n\n  const delayValue = Number(formRef.delay.value);\n  const stepValue = Number(formRef.step.value);\n  const amountValue = Number(formRef.amount.value);\n  let currentDelay = delayValue;\n\n  console.log(delayValue, stepValue, amountValue);\n\n  for (let i = 1; i <= amountValue; i++) {\n    console.log(i, currentDelay);\n    createPromise(i, currentDelay).then(notifySuccess).catch(notifyRejected);\n    currentDelay += stepValue;\n  }\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$notifySuccess","param","console","log","Notify","success","concat","$ce04d3a99e08e73b$var$notifyRejected","failure","$ce04d3a99e08e73b$var$formRef","document","querySelector","addEventListener","e","preventDefault","delayValue","Number","value","stepValue","step","amountValue","amount","currentDelay","i","then","catch"],"version":3,"file":"03-promises.5db28018.js.map"}